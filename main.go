package main

import "fmt"

// 5 layers, 4 rows, 12 elements in each row
// bottom layer to top layer, inner radial column to outer radial column
// -1 means no element
var grecianComputerPuzzle = [5][4][12]int{
	{
		{11, 11, 14, 11, 14, 11, 14, 14, 11, 14, 11, 14},
		{4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15},
		{4, 4, 6, 6, 3, 3, 14, 14, 21, 21, 9, 9},
		{8, 3, 4, 12, 2, 5, 10, 7, 16, 8, 7, 8},
	},
	{
		{7, 14, 11, -1, 8, -1, 16, 2, 7, -1, 9, -1},
		{6, -1, 14, 12, 3, 8, 9, -1, 9, 20, 12, 3},
		{2, 13, 9, -1, 17, 19, 3, 12, 3, 26, 6, -1},
		{12, -1, 6, -1, 10, -1, 10, -1, 1, -1, 9, -1},
	},
	{
		{17, 4, 5, -1, 7, 8, 9, 13, 9, 7, 13, 21},
		{11, 26, 14, 1, 12, -1, 21, 8, 15, 4, 9, 18},
		{22, -1, 16, -1, 9, -1, 5, -1, 10, -1, 8, -1},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	},
	{
		{6, -1, 11, 11, 6, 11, -1, 6, 17, 7, 3, -1},
		{15, -1, -1, 14, -1, 9, -1, 12, -1, 4, -1, 7},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	},
	{
		{15, -1, 8, -1, 3, -1, 6, -1, 10, -1, 7, -1},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
		{-1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1, -1},
	},
}

func main() {
	// layer1Offset := 0
	// layer2Offset := 0
	// layer3Offset := 0
	// layer4Offset := 0
	// layer5Offset := 0
	for _, layer := range grecianComputerPuzzle {
		for _, row := range layer {
			for _, element := range row {
				fmt.Printf("%d ", element)
			}
			fmt.Println()
		}
		fmt.Println()
	}
}
